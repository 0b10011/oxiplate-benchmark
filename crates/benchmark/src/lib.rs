pub trait Generator {
    type Output: Output;

    /// Generate a new empty output value.
    fn output(&self) -> Self::Output;

    /// A test of static output without any logic or variables.
    /// Simply outputs "hello world".
    fn inline_text(&self, output: &mut Self::Output);

    /// A test of variable output without any logic or static text.
    /// Simply outputs the variable as-is.
    fn inline_variable(&self, output: &mut Self::Output, text: &str);

    /// A benchmark of template extending performance.
    /// Main page should extend a layout template.
    /// See latest `oxiplate-*` benchmark for example.
    fn extends(&self, output: &mut Self::Output, title: &str, visit_count: u64);

    /// A benchmark of outputting a loop of strings.
    fn statement_for(&self, output: &mut Self::Output, values: Vec<&str>);
}

pub trait Output: Default {
    /// Returns a reference to the generated bytes.
    fn as_bytes(&self) -> &[u8];
}

impl Output for String {
    #[inline]
    fn as_bytes(&self) -> &[u8] {
        self.as_bytes()
    }
}

impl Output for Vec<u8> {
    #[inline]
    fn as_bytes(&self) -> &[u8] {
        self.as_slice()
    }
}
